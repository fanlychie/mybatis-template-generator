package ${packname};

import java.io.Serializable;
import java.util.List;
import ${epackage}.Entity;
import ${epackage}.Entity.Criteria;

/**
 * 数据访问层基类接口
 * @param <K> 主键类型
 * @param <E> 实体类型
 */
public interface BaseDao<K extends Serializable, E extends Entity> {

	/**
	 * 保存数据
	 * 
	 * @param entity 实体类对象
	 * @return 返回保存的数据的主键
	 */
	K save(E entity);

	/**
	 * 根据主键删除数据
	 * 
	 * @param id 主键
	 * @return 返回操作成功的记录条数
	 */
	int delete(K id);

	/**
	 * 根据条件删除数据
	 * 
	 * @param criteria 条件对象
	 * @return 返回操作成功的记录条数
	 */
	int delete(Criteria criteria);

	/**
	 * 根据主键更新数据
	 * 
	 * @param entity 含主键的实体类对象
	 * @return 返回操作成功的记录条数
	 */
	int update(E entity);

	/**
	 * 根据条件更新数据
	 * 
	 * @param entity   实体类对象
	 * @param criteria 条件对象
	 * @return 返回操作成功的记录条数
	 */
	int update(E entity, Criteria criteria);

	/**
	 * 根据主键查询唯一数据
	 * 
	 * @param id 主键
	 * @return 返回查询的唯一结果数据
	 */
	E selectOne(K id);

	/**
	 * 根据条件查询唯一数据
	 * 
	 * @param criteria 条件对象
	 * @return 返回查询的唯一结果数据
	 */
	E selectOne(Criteria criteria);
	
	/**
	 * 查询所有数据
	 * 
	 * @return 返回查询结果的数据集合
	 */
	List<E> selectAll();

	/**
	 * 根据条件查询数据
	 * 
	 * @param criteria 条件对象
	 * @return 返回查询结果的数据集合
	 */
	List<E> selectList(Criteria criteria);

	/**
	 * 根据条件查询记录的条数
	 * 
	 * @param criteria 条件对象
	 * @return 返回查询结果的记录条数
	 */
	long selectCount(Criteria criteria);

}